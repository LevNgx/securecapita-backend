CREATE SCHEMA IF NOT EXISTS hospitalia ;
SET NAMES 'UTF8MB4';

SET TIME_ZONE = '-4:00';

USE hospitalia;

DROP TABLE IF EXISTS Users,Roles,UserRoles,Events,UserEvents,AccountVerifications,ResetPasswordVerifications;

CREATE TABLE Users (
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL ,
    last_name VARCHAR(50) NOT NULL,
    phone VARCHAR(20) DEFAULT NULL,
    address VARCHAR(255) DEFAULT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) DEFAULT NULL,
    title VARCHAR(255) DEFAULT NULL,
    bio VARCHAR(255) DEFAULT NULL,
    enabled BOOLEAN DEFAULT FALSE,
    non_locked BOOLEAN DEFAULT TRUE,
    mfa_enabled BOOLEAN DEFAULT FALSE,
    image_url VARCHAR(255) DEFAULT NULL,
    created_on DATETIME DEFAULT current_timestamp,
    CONSTRAINT Unique_Users_Email UNIQUE (email)
    
);


-- DROP TABLE IF EXISTS Roles;
CREATE TABLE Roles (
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    permissions VARCHAR(255) NOT NULL,
    CONSTRAINT Unique_Roles_name UNIQUE (name)

);


-- DROP TABLE IF EXISTS UserRoles;

CREATE TABLE UserRoles (
	user_role_id  BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT UNSIGNED NOT NULL,
    role_id BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (role_id) REFERENCES Roles (id) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT Unique_UserRoles_User UNIQUE (user_id)
    
); 


-- DROP TABLE IF EXISTS Events;
CREATE TABLE Events(
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(100) NOT NULL CHECK(type IN ('LOGIN_ATTEMPT','LOGIN_ATTEMPT_FAILURE','LOGIN_ATTEMPT_SUCCESS','PROFILE_UPDATE','PROFILE_PICTURE_UPDATE','ROLE_UPDATE','ACCOUNT_SETTINGS_UPDATE','PASSWORD_UPDATE','MFA_UPDATE')),
    description VARCHAR(100) NOT NULL,
    CONSTRAINT Unique_Events_Type UNIQUE (type)
);

-- DROP TABLE IF EXISTS UserEvents;
CREATE TABLE UserEvents(
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT UNSIGNED NOT NULL,
    event_id BIGINT UNSIGNED NOT NULL,
    device VARCHAR(100) DEFAULT NULL,
    ip_address VARCHAR(100) DEFAULT NULL,
    created_at DATETIME DEFAULT current_timestamp,
	FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (event_id) REFERENCES Events (id) ON DELETE RESTRICT ON UPDATE CASCADE
);


-- DROP TABLE IF EXISTS AccountVerfications;
CREATE TABLE AccountVerifications(
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT UNSIGNED NOT NULL,
    url  VARCHAR(255) NOT NULL,
	FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT Unique_AccountVerfications_User_Id UNIQUE (user_id),
    CONSTRAINT Unique_AccountVerfications_Url UNIQUE (url)
	
);


-- DROP TABLE IF EXISTS ResetPasswordVerifications;
CREATE TABLE ResetPasswordVerifications(
	id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT UNSIGNED NOT NULL,
    url  VARCHAR(255) NOT NULL,
    expiration_date DATETIME NOT NULL,
	FOREIGN KEY (user_id) REFERENCES Users (id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT Unique_AResetPasswordVerifications_User_Id UNIQUE (user_id),
    CONSTRAINT Unique_ResetPasswordVerifications_Url UNIQUE (url)
	
);













